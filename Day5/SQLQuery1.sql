use pubs
select * from authors
select * from titles
select * from sales

--projection
select au_fname, phone from authors
select au_fname 'Author Name' ,phone 'Contact Number' from authors
select au_fname as 'Author Name' ,phone as 'Contact Number' from authors
select au_fname Author_Name ,phone Contact_Number from authors

--selection
select * from authors where contract = 0
select * from titles where royalty >10
select*from titles where royalty >10 or price>15
select*from titles where royalty >10 and price>15
select title 'Book Name', price 'Cost', royalty 'Royalty Paid', advance 'Advance received' 
from titles
where royalty >10 and price>15

select title from titles where price >= 10 and price <=25
select title from titles where price between 10 and 25

select * from titles where title like 'The%'
--fetch those title that have 'data' any where in the title--
select title from titles where title like '%data%'
--fetch those titles which are published before '1991-06-18 00:00:00.000'
select title 'titles' from titles where pubdate<'1991-06-18 00:00:00.000'


--fetch the book name and the price of those books that have been published by 0877
select title 'Book Name',price 'price'from titles where pub_id ='0877'

--fetch book name, price and notes of book from business type that re priced in
-- the range of 15 to 100
[10:00 AM] Vishesh Jaiswal (Guest)
select title 'Book Name',price 'Price',notes 'Notes'
from titles where price between 15 and 100 and type='business'
 
 --I want the books that have price of 10 or 20 or 30

 select * from titles where price=10 or price = 20 or price =30

 select * from titles where price in(10, 20, 30)

 --Aggrigate data
 select AVG(price) 'Average price' from titles

 select AVG(price) 'Average price' from titles where type='business'

 select AVG(price) 'Average price', Sum(price) 'Sum of price' from titles

 --sub total and grouping
 select type 'Type name', AVG(price) 'Average price' from titles group by type

 select state, count(au_id) from authors group by state

 select title_id, count(ord_num) 'number of times sold'
from sales group by title_id

select title_id, count(ord_num) 'number of times sold'
from sales group by title_id
having count(ord_num) >1

 select type 'Type name', AVG(price) 'Average price'
 from titles 
 where price>10
 group by type
 having AVG(price)>18

 --sorting
 select * from authors order by state,city,au_fname

 --subqueries

 select * from titles
 select * from sales
 select title_id from titles where title = 'Straight Talk About Computers'
 select * from sales where title_id = 'BU7832'
 select * from sales where title_id =
 (select title_id from titles where title = 'Straight Talk About Computers')
 select*from authors
 Select * from titles where title_id in(
select title_id from titleauthor where au_id = 
(select au_id from authors where au_lname = 'White'))
 
 --print title name for books that have been sold
 select title 'Book Name' from titles where title_id in
(select title_id from sales )

select * from publishers
--fetch the average price of titles that have been published by publishers
--who are from USA. Print only if the average is greater than the average of 
--all the titles
--sort them by ascending order of the average
select avg(price) as Avg_price_of_Titles ,pub_id from titles where pub_id in(select pub_id from publishers where country = 'USA')
group by pub_id 
having avg(price)>(select avg(price) from titles)
order by avg(price);

select *from titles

select title as title_name from titles

select title as title_name from titles where pub_id=1389;

select notes as books from titles where price between 10 and 15

select notes as books from titles where  price is NULL ;

select * from titles where notes  like 'The%';

select notes as books from titles where notes NOT like '%V%'

select notes from titles 
order by royalty ASC

select notes as books from titles 
order by pub_id DESC, type ASC,price DESC;

select type, avg(price) as avg_price
from titles
group by type

select title,price from titles 
order by price DESC
LIMIT 2;

select DISTINCT type from titles

--12--
select notes as books from titles
where type='business' and price <20 and advance >7000;

select count(*)notes from titles
--13--
select pub_id, count(*)as notes_count from titles 
where  price between 15 and 25 
and title like '%it%'
group by pub_id 
having count(*)>2
order by notes_count ASC;

--14--
select au_lname as Authors_name from authors
where state='CA'
--15--
select state, count(*) as author_name
from authors 
group by state

--SET-2--
--1--
SELECT storeid, COUNT(*) AS NumberOfOrders
FROM Orders
GROUP BY storeid;

--2--
SELECT t.title AS "Title Name", COUNT(s.ord_num) AS "Number of Orders"
FROM titles t
LEFT JOIN sales s ON t.title_id = s.title_id
GROUP BY t.title;
--3--
SELECT p.pub_name AS "Publisher Name", t.title AS "Book Name"
FROM publishers p
INNER JOIN titles t ON p.pub_id = t.pub_id;
--4--
SELECT CONCAT(au_fname, ' ', au_lname) AS "Author Full Name"
FROM authors;
--5--
SELECT title AS "Book Name", price AS "Price", (price + price * 12.36 / 100) AS "Price with Tax"
FROM titles;
--6--
SELECT CONCAT(au_fname, ' ', au_lname) AS "Author Name", title AS "Title Name"
FROM authors
INNER JOIN titleauthor ON authors.au_id = titleauthor.au_id
INNER JOIN titles ON titleauthor.title_id = titles.title_id;
--7--
SELECT CONCAT(a.au_fname, ' ', a.au_lname) AS "Author Name", 
       t.title AS "Title Name", 
       p.pub_name AS "Publisher Name"
FROM authors a
INNER JOIN titleauthor ta ON a.au_id = ta.au_id
INNER JOIN titles t ON ta.title_id = t.title_id
INNER JOIN publishers p ON t.pub_id = p.pub_id;
--8--
SELECT p.pub_name AS "Publisher Name", AVG(t.price) AS "Average Price"
FROM publishers p
INNER JOIN titles t ON p.pub_id = t.pub_id
GROUP BY p.pub_name;
--9--
SELECT p.pub_name AS "Publisher Name", AVG(t.price) AS "Average Price"
FROM publishers p
INNER JOIN titles t ON p.pub_id = t.pub_id
GROUP BY p.pub_name;
--10--
SELECT s.ord_num AS "Order Number"
FROM sales s
INNER JOIN titles t ON s.title_id = t.title_id
INNER JOIN publishers p ON t.pub_id = p.pub_id
WHERE p.pub_name = 'New Moon Books';
--11--
SELECT p.pub_name AS "Publisher Name", COUNT(s.ord_num) AS "Number of Orders"
FROM publishers p
INNER JOIN titles t ON p.pub_id = t.pub_id
LEFT JOIN sales s ON t.title_id = s.title_id
GROUP BY p.pub_name;
--12--
SELECT o.order_number AS "Order Number", b.book_name AS "Book Name", od.quantity AS "Quantity",
       b.price AS "Price", (od.quantity * b.price) AS "Total Price"
FROM orders o
INNER JOIN order_details od ON o.order_id = od.order_id
INNER JOIN books b ON od.book_id = b.book_id;
--13--
SELECT od.book_id, b.book_name AS "Book Name", SUM(od.quantity) AS "Total Order Quantity"
FROM order_details od
INNER JOIN books b ON od.book_id = b.book_id
GROUP BY od.book_id, b.book_name;



































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































